digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 47"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-30"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 codeblock_5 section_6 section_7}
{rank=same; header_2 prose_3 prose_4 codeblock_5 section_6 section_7}

header_2 [label="1 : Stator"]

prose_3 [label="prose"]

prose_4 [label="prose"]

codeblock_5 [label="code block 11-13"]

section_6 [label="section: 16-30"]

section_7 [label="section: 31-47"]


// END RANK section_1

header_2 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Stator"]
// END RANK header_2

prose_3 -> { raw_9}
{rank=same; raw_9}

raw_9 [label="raw"]


// END RANK prose_3

raw_9 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  Having gotten about as far as I can with mere string concatenation, it's
time to put together a proper set of operations for transducing across a
Node.
"]
// END RANK raw_9

prose_4 -> { raw_11}
{rank=same; raw_11}

raw_11 [label="raw"]


// END RANK prose_4

raw_11 -> leaf_12
leaf_12  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This isn't a great place to put theory, let's build the structure and
flesh out from there.
"]
// END RANK raw_11

codeblock_5 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Stator = meta {}"]
// END RANK codeblock_5

section_6 -> { header_14 prose_15 prose_16 codeblock_17}
{rank=same; header_14 prose_15 prose_16 codeblock_17}

header_14 [label="2 : Constructor"]

prose_15 [label="prose"]

prose_16 [label="prose"]

codeblock_17 [label="code block 24-28"]


// END RANK section_6

header_14 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** Constructor"]
// END RANK header_14

prose_15 -> { raw_19}
{rank=same; raw_19}

raw_19 [label="raw"]


// END RANK prose_15

raw_19 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

We set up a new stator on each Node we're transducing, so we want it to
be quick and cheap.
"]
// END RANK raw_19

prose_16 -> { raw_21}
{rank=same; raw_21}

raw_21 [label="raw"]


// END RANK prose_16

raw_21 -> leaf_22
leaf_22  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I recommend either lifting this method or providing an override if
subclassing Stator.
"]
// END RANK raw_21

codeblock_17 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function call(stator)
  return setmetatable({}, {__index = stator, __call = call })
end"]
// END RANK codeblock_17

section_7 -> { header_24 prose_25 codeblock_26 codeblock_27}
{rank=same; header_24 prose_25 codeblock_26 codeblock_27}

header_24 [label="2 : New"]

prose_25 [label="prose"]

codeblock_26 [label="code block 36-42"]

codeblock_27 [label="code block 45-47"]


// END RANK section_7

header_24 -> leaf_28
leaf_28  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* New
"]
// END RANK header_24

prose_25 -> { raw_29 prespace_30 literal_31 raw_32 prespace_33 literal_34 raw_35 prespace_36 literal_37 raw_38}
{rank=same; raw_29 prespace_30 literal_31 raw_32 prespace_33 literal_34 raw_35 prespace_36 literal_37 raw_38}

raw_29 [label="raw"]

prespace_30 [label="prespace"]

literal_31 [label="literal"]

raw_32 [label="raw"]

prespace_33 [label="prespace"]

literal_34 [label="literal"]

raw_35 [label="raw"]

prespace_36 [label="prespace"]

literal_37 [label="literal"]

raw_38 [label="raw"]


// END RANK prose_25

raw_29 -> leaf_39
leaf_39  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

The root Stator has a global context, which is itself.  This is given
the synonyms"]
// END RANK raw_29

prespace_30 -> leaf_40
leaf_40  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_30

literal_31 -> leaf_41
leaf_41  [color=Gray,shape=rectangle,fontname=Inconsolata,label="G"]
// END RANK literal_31

raw_32 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label=","]
// END RANK raw_32

prespace_33 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_33

literal_34 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="g"]
// END RANK literal_34

raw_35 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and"]
// END RANK raw_35

prespace_36 -> leaf_46
leaf_46  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_36

literal_37 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="_G"]
// END RANK literal_37

raw_38 -> leaf_48
leaf_48  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", to suit various styles.
"]
// END RANK raw_38

codeblock_26 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function new(Stator)
  local stator = call(Stator)
  stator.g, stator.G, stator._G = stator, stator, stator
  return stator
end"]
// END RANK codeblock_26

codeblock_27 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label="return setmetatable(Stator, {__call = new})"]
// END RANK codeblock_27


}
